{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_array(arr) {\n    return _array_with_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_rest();\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar tableContent = document.querySelector(\"tbody\");\nvar lastSortedIndex = null;\nvar isAscending = true;\ntable.addEventListener(\"click\", function(events) {\n    var clickedCell = events.target;\n    var rows = tableContent.querySelectorAll(\"tr\");\n    rows.forEach(function(row) {\n        row.classList.remove(\"active\");\n    });\n    if (clickedCell.tagName === \"TD\") clickedCell.parentNode.classList.add(\"active\");\n});\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    var labels = [\n        \"Name\",\n        \"Position\",\n        \"Office\",\n        \"Age\",\n        \"Salary\"\n    ];\n    var inputIds = [\n        \"name\",\n        \"position\",\n        \"office\",\n        \"age\",\n        \"salary\"\n    ];\n    for(var i = 0; i < labels.length; i++){\n        var label = document.createElement(\"label\");\n        label.textContent = \"\".concat(labels[i], \": \");\n        var input = document.createElement(\"input\");\n        input.type = i === 3 || i === 4 ? \"number\" : \"text\";\n        input.name = inputIds[i];\n        input.dataset.qa = inputIds[i];\n        label.appendChild(input);\n        if (labels[i] === \"Office\") {\n            var officeSelectLabel = document.createElement(\"label\");\n            officeSelectLabel.textContent = \"Office: \";\n            var officeSelect = document.createElement(\"select\");\n            officeSelect.name = \"office\";\n            officeSelect.dataset.qa = \"office\";\n            // eslint-disable-next-line max-len\n            var officeOptions = [\n                \"Tokyo\",\n                \"Singapore\",\n                \"London\",\n                \"New York\",\n                \"Edinburgh\",\n                \"San Francisco\"\n            ];\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = officeOptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var optionText = _step.value;\n                    var option = document.createElement(\"option\");\n                    option.value = optionText;\n                    option.textContent = optionText;\n                    officeSelect.appendChild(option);\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            officeSelectLabel.appendChild(officeSelect);\n            form.appendChild(officeSelectLabel);\n        } else form.appendChild(label);\n    }\n    var submitButton = document.createElement(\"button\");\n    submitButton.type = \"submit\";\n    submitButton.textContent = \"Save to table\";\n    form.appendChild(submitButton);\n    document.body.appendChild(form);\n    form.addEventListener(\"submit\", function(events) {\n        events.preventDefault();\n        var formData = new FormData(form);\n        var employeeData = {};\n        formData.forEach(function(value, key) {\n            if (key === \"salary\") employeeData[key] = convertSalary(value);\n            else employeeData[key] = value;\n        });\n        var data = Object.fromEntries(formData.entries());\n        if (data.name.length < 4) // eslint-disable-next-line max-len\n        pushNotification(\"error\", \"Error\", \"Name should be at least 4 characters long\");\n        else if (data.age < 18 || data.age > 90) // eslint-disable-next-line max-len\n        pushNotification(\"error\", \"Error\", \"Age should be a number between 18 and 90\");\n        else if (!data.position || !data.salary) pushNotification(\"error\", \"Error\", \"All fields are required\");\n        else {\n            pushNotification(\"success\", \"Success\", \"Employee was added\");\n            addEmployeeToTable(employeeData);\n            form.reset();\n        }\n    });\n    function convertSalary(salaryString) {\n        var parsedSalary = parseFloat(salaryString.replace(/[^\\d]/g, \"\"));\n        if (!isNaN(parsedSalary)) return \"$\" + parsedSalary.toLocaleString(\"en-US\");\n        else return salaryString;\n    }\n    function addEmployeeToTable(employeeData) {\n        var newRow = tableContent.insertRow(-1);\n        var cellsOrder = [\n            \"name\",\n            \"position\",\n            \"office\",\n            \"age\",\n            \"salary\"\n        ];\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = cellsOrder[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var key = _step.value;\n                var cell = newRow.insertCell();\n                cell.textContent = employeeData[key];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n});\ntable.addEventListener(\"click\", function(e) {\n    var _tableContent;\n    var header = e.target.closest(\"th\");\n    if (!header) return;\n    var cellIndex = header.cellIndex;\n    if (cellIndex === lastSortedIndex) isAscending = !isAscending;\n    else {\n        isAscending = true;\n        lastSortedIndex = cellIndex;\n    }\n    var sortedRows = sortRows(tableContent.children, cellIndex);\n    (_tableContent = tableContent).append.apply(_tableContent, _to_consumable_array(sortedRows));\n});\nfunction sortRows(param, index) {\n    var _param = _to_array(param), rows = _param.slice(0);\n    var isSortingBySalary = index === 4;\n    rows.sort(function(a, b) {\n        var dataA = a.cells[index].innerText;\n        var dataB = b.cells[index].innerText;\n        if (isSortingBySalary) {\n            var normalize = function(data) {\n                return data.slice(1).replace(\",\", \"\");\n            };\n            if (isAscending) return normalize(dataA) - normalize(dataB);\n            else return normalize(dataB) - normalize(dataA);\n        }\n        if (isAscending) return dataA.localeCompare(dataB);\n        else return dataB.localeCompare(dataA);\n    });\n    return rows;\n}\nfunction pushNotification(type, title, description) {\n    var notification = document.createElement(\"div\");\n    notification.classList.add(\"notification\", type);\n    notification.dataset.qa = \"notification\";\n    var titleElement = document.createElement(\"h2\");\n    titleElement.textContent = title;\n    var descriptionElement = document.createElement(\"p\");\n    descriptionElement.textContent = description;\n    notification.appendChild(titleElement);\n    notification.appendChild(descriptionElement);\n    document.body.appendChild(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 2500);\n}\ntable.addEventListener(\"dblclick\", function(events) {\n    var clickedCell = events.target.closest(\"td\");\n    if (!clickedCell) return;\n    var oldValue = clickedCell.textContent;\n    clickedCell.textContent = \"\";\n    var input = document.createElement(\"input\");\n    input.type = \"text\";\n    input.classList.add(\"cell-input\");\n    function saveChanges(cell, text) {\n        var newValue = text.value.trim();\n        if (newValue === \"\") cell.textContent = oldValue;\n        else cell.textContent = newValue;\n    }\n    input.addEventListener(\"blur\", function() {\n        saveChanges(clickedCell, input);\n    });\n    input.addEventListener(\"keypress\", function(e) {\n        if (e.key === \"Enter\") saveChanges(clickedCell, input);\n    });\n    clickedCell.appendChild(input);\n    input.focus();\n});\ndocument.querySelector(\"body\").style.alignItems = \"flex-start\";\n\n//# sourceMappingURL=index.2548d39d.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst tableContent = document.querySelector('tbody');\nlet lastSortedIndex = null;\nlet isAscending = true;\n\ntable.addEventListener('click', function(events) {\n  const clickedCell = events.target;\n  const rows = tableContent.querySelectorAll('tr');\n\n  rows.forEach(row => {\n    row.classList.remove('active');\n  });\n\n  if (clickedCell.tagName === 'TD') {\n    clickedCell.parentNode.classList.add('active');\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  const labels = ['Name', 'Position', 'Office', 'Age', 'Salary'];\n  const inputIds = ['name', 'position', 'office', 'age', 'salary'];\n\n  for (let i = 0; i < labels.length; i++) {\n    const label = document.createElement('label');\n\n    label.textContent = `${labels[i]}: `;\n\n    const input = document.createElement('input');\n\n    input.type = (i === 3 || i === 4) ? 'number' : 'text';\n\n    input.name = inputIds[i];\n    input.dataset.qa = inputIds[i];\n\n    label.appendChild(input);\n\n    if (labels[i] === 'Office') {\n      const officeSelectLabel = document.createElement('label');\n\n      officeSelectLabel.textContent = 'Office: ';\n\n      const officeSelect = document.createElement('select');\n\n      officeSelect.name = 'office';\n      officeSelect.dataset.qa = 'office';\n\n      // eslint-disable-next-line max-len\n      const officeOptions = ['Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco'];\n\n      for (const optionText of officeOptions) {\n        const option = document.createElement('option');\n\n        option.value = optionText;\n        option.textContent = optionText;\n        officeSelect.appendChild(option);\n      }\n\n      officeSelectLabel.appendChild(officeSelect);\n      form.appendChild(officeSelectLabel);\n    } else {\n      form.appendChild(label);\n    }\n  }\n\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'submit';\n  submitButton.textContent = 'Save to table';\n  form.appendChild(submitButton);\n\n  document.body.appendChild(form);\n\n  form.addEventListener('submit', function(events) {\n    events.preventDefault();\n\n    const formData = new FormData(form);\n    const employeeData = {};\n\n    formData.forEach((value, key) => {\n      if (key === 'salary') {\n        employeeData[key] = convertSalary(value);\n      } else {\n        employeeData[key] = value;\n      }\n    });\n\n    const data = Object.fromEntries(formData.entries());\n\n    if (data.name.length < 4) {\n      // eslint-disable-next-line max-len\n      pushNotification('error', 'Error', 'Name should be at least 4 characters long');\n    } else if (data.age < 18 || data.age > 90) {\n      // eslint-disable-next-line max-len\n      pushNotification('error', 'Error', 'Age should be a number between 18 and 90');\n    } else if (!data.position || !data.salary) {\n      pushNotification('error', 'Error', 'All fields are required');\n    } else {\n      pushNotification('success', 'Success', 'Employee was added');\n      addEmployeeToTable(employeeData);\n\n      form.reset();\n    }\n  });\n\n  function convertSalary(salaryString) {\n    const parsedSalary = parseFloat(salaryString.replace(/[^\\d]/g, ''));\n\n    if (!isNaN(parsedSalary)) {\n      return '$' + parsedSalary.toLocaleString('en-US');\n    } else {\n      return salaryString;\n    }\n  }\n\n  function addEmployeeToTable(employeeData) {\n    const newRow = tableContent.insertRow(-1);\n\n    const cellsOrder = ['name', 'position', 'office', 'age', 'salary'];\n\n    for (const key of cellsOrder) {\n      const cell = newRow.insertCell();\n\n      cell.textContent = employeeData[key];\n    }\n  }\n});\n\ntable.addEventListener('click', function(e) {\n  const header = e.target.closest('th');\n\n  if (!header) {\n    return;\n  }\n\n  const cellIndex = header.cellIndex;\n\n  if (cellIndex === lastSortedIndex) {\n    isAscending = !isAscending;\n  } else {\n    isAscending = true;\n    lastSortedIndex = cellIndex;\n  }\n\n  const sortedRows = sortRows(tableContent.children, cellIndex);\n\n  tableContent.append(...sortedRows);\n});\n\nfunction sortRows([...rows], index) {\n  const isSortingBySalary = index === 4;\n\n  rows.sort((a, b) => {\n    const dataA = a.cells[index].innerText;\n    const dataB = b.cells[index].innerText;\n\n    if (isSortingBySalary) {\n      const normalize = (data) => data.slice(1).replace(',', '');\n\n      if (isAscending) {\n        return normalize(dataA) - normalize(dataB);\n      } else {\n        return normalize(dataB) - normalize(dataA);\n      }\n    }\n\n    if (isAscending) {\n      return dataA.localeCompare(dataB);\n    } else {\n      return dataB.localeCompare(dataA);\n    }\n  });\n\n  return rows;\n}\n\nfunction pushNotification(type, title, description) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n\n  const titleElement = document.createElement('h2');\n\n  titleElement.textContent = title;\n\n  const descriptionElement = document.createElement('p');\n\n  descriptionElement.textContent = description;\n  notification.appendChild(titleElement);\n  notification.appendChild(descriptionElement);\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2500);\n}\n\ntable.addEventListener('dblclick', function(events) {\n  const clickedCell = events.target.closest('td');\n\n  if (!clickedCell) {\n    return;\n  }\n\n  const oldValue = clickedCell.textContent;\n\n  clickedCell.textContent = '';\n\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.classList.add('cell-input');\n\n  function saveChanges(cell, text) {\n    const newValue = text.value.trim();\n\n    if (newValue === '') {\n      cell.textContent = oldValue;\n    } else {\n      cell.textContent = newValue;\n    }\n  }\n\n  input.addEventListener('blur', function() {\n    saveChanges(clickedCell, input);\n  });\n\n  input.addEventListener('keypress', function(e) {\n    if (e.key === 'Enter') {\n      saveChanges(clickedCell, input);\n    }\n  });\n\n  clickedCell.appendChild(input);\n  input.focus();\n});\n\ndocument.querySelector('body').style.alignItems = 'flex-start';\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","table","document","querySelector","tableContent","lastSortedIndex","isAscending","pushNotification","type","title","description","notification","createElement","classList","add","dataset","qa","titleElement","textContent","descriptionElement","appendChild","body","setTimeout","remove","addEventListener","events","clickedCell","target","rows","querySelectorAll","forEach","row","tagName","parentNode","form","labels","inputIds","label","concat","input","officeSelectLabel","officeSelect","officeOptions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","optionText","value","option","err","return","submitButton","preventDefault","formData","FormData","employeeData","key","parsedSalary","isNaN","parseFloat","salaryString","replace","toLocaleString","data","fromEntries","entries","age","position","salary","addEmployeeToTable","newRow","insertRow","cellsOrder","cell","insertCell","reset","e","header","closest","param","index","isSortingBySalary","cellIndex","sortedRows","children","_param","_array_with_holes","isArray","_non_iterable_rest","TypeError","sort","a","b","dataA","cells","innerText","dataB","normalize","localeCompare","append","apply","_array_without_holes","_non_iterable_spread","oldValue","saveChanges","focus","text","newValue","trim","style","alignItems"],"version":3,"file":"index.2548d39d.js.map"}