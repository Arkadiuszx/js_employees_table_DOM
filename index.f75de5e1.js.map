{"mappings":"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","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst tableContent = document.querySelector('tbody');\nlet lastSortedIndex = null;\nlet isAscending = true;\n\ntable.addEventListener('click', function(events) {\n  const clickedCell = events.target;\n  const rows = tableContent.querySelectorAll('tr');\n\n  rows.forEach(row => {\n    row.classList.remove('active');\n  });\n\n  if (clickedCell.tagName === 'TD') {\n    clickedCell.parentNode.classList.add('active');\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  const labels = ['Name', 'Position', 'Office', 'Age', 'Salary'];\n  const inputIds = ['name', 'position', 'office', 'age', 'salary'];\n\n  for (let i = 0; i < labels.length; i++) {\n    const label = document.createElement('label');\n\n    label.textContent = `${labels[i]}: `;\n\n    const input = document.createElement('input');\n\n    input.type = (i === 3 || i === 4) ? 'number' : 'text';\n\n    input.name = inputIds[i];\n    input.dataset.qa = inputIds[i];\n\n    label.appendChild(input);\n\n    if (labels[i] === 'Office') {\n      const officeSelectLabel = document.createElement('label');\n\n      officeSelectLabel.textContent = 'Office: ';\n\n      const officeSelect = document.createElement('select');\n\n      officeSelect.name = 'office';\n      officeSelect.dataset.qa = 'office';\n\n      // eslint-disable-next-line max-len\n      const officeOptions = ['Tokyo', 'Singapore', 'London', 'New York', 'Edinburgh', 'San Francisco'];\n\n      for (const optionText of officeOptions) {\n        const option = document.createElement('option');\n\n        option.value = optionText;\n        option.textContent = optionText;\n        officeSelect.appendChild(option);\n      }\n\n      officeSelectLabel.appendChild(officeSelect);\n      form.appendChild(officeSelectLabel);\n    } else {\n      form.appendChild(label);\n    }\n  }\n\n  const submitButton = document.createElement('button');\n\n  submitButton.type = 'submit';\n  submitButton.textContent = 'Save to table';\n  form.appendChild(submitButton);\n\n  document.body.appendChild(form);\n\n  form.addEventListener('submit', function(events) {\n    events.preventDefault();\n\n    const formData = new FormData(form);\n    const employeeData = {};\n\n    formData.forEach((value, key) => {\n      if (key === 'salary') {\n        employeeData[key] = convertSalary(value);\n      } else {\n        employeeData[key] = value;\n      }\n    });\n\n    const data = Object.fromEntries(formData.entries());\n\n    if (data.name.length < 4) {\n      // eslint-disable-next-line max-len\n      pushNotification('error', 'Error', 'Name should be at least 4 characters long');\n    } else if (data.age < 18 || data.age > 90) {\n      // eslint-disable-next-line max-len\n      pushNotification('error', 'Error', 'Age should be a number between 18 and 90');\n    } else if (!data.position || !data.salary) {\n      pushNotification('error', 'Error', 'All fields are required');\n    } else {\n      pushNotification('success', 'Success', 'Employee was added');\n      addEmployeeToTable(employeeData);\n\n      form.reset();\n    }\n  });\n\n  function convertSalary(salaryString) {\n    const parsedSalary = parseFloat(salaryString.replace(/[^\\d]/g, ''));\n\n    if (!isNaN(parsedSalary)) {\n      return '$' + parsedSalary.toLocaleString('en-US');\n    } else {\n      return salaryString;\n    }\n  }\n\n  function addEmployeeToTable(employeeData) {\n    const newRow = tableContent.insertRow(-1);\n\n    const cellsOrder = ['name', 'position', 'office', 'age', 'salary'];\n\n    for (const key of cellsOrder) {\n      const cell = newRow.insertCell();\n\n      cell.textContent = employeeData[key];\n    }\n  }\n});\n\ntable.addEventListener('click', function(e) {\n  const header = e.target.closest('th');\n\n  if (!header) {\n    return;\n  }\n\n  const cellIndex = header.cellIndex;\n\n  if (cellIndex === lastSortedIndex) {\n    isAscending = !isAscending;\n  } else {\n    isAscending = true;\n    lastSortedIndex = cellIndex;\n  }\n\n  const sortedRows = sortRows(tableContent.children, cellIndex);\n\n  tableContent.append(...sortedRows);\n});\n\nfunction sortRows([...rows], index) {\n  const isSortingBySalary = index === 4;\n\n  rows.sort((a, b) => {\n    const dataA = a.cells[index].innerText;\n    const dataB = b.cells[index].innerText;\n\n    if (isSortingBySalary) {\n      const normalize = (data) => data.slice(1).replace(',', '');\n\n      if (isAscending) {\n        return normalize(dataA) - normalize(dataB);\n      } else {\n        return normalize(dataB) - normalize(dataA);\n      }\n    }\n\n    if (isAscending) {\n      return dataA.localeCompare(dataB);\n    } else {\n      return dataB.localeCompare(dataA);\n    }\n  });\n\n  return rows;\n}\n\nfunction pushNotification(type, title, description) {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n\n  const titleElement = document.createElement('h2');\n\n  titleElement.textContent = title;\n\n  const descriptionElement = document.createElement('p');\n\n  descriptionElement.textContent = description;\n  notification.appendChild(titleElement);\n  notification.appendChild(descriptionElement);\n  document.body.appendChild(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2500);\n}\n\ntable.addEventListener('dblclick', function(events) {\n  const clickedCell = events.target.closest('td');\n\n  if (!clickedCell) {\n    return;\n  }\n\n  const oldValue = clickedCell.textContent;\n\n  clickedCell.textContent = '';\n\n  const input = document.createElement('input');\n\n  input.type = 'text';\n  input.classList.add('cell-input');\n\n  function saveChanges(cell, text) {\n    const newValue = text.value.trim();\n\n    if (newValue === '') {\n      cell.textContent = oldValue;\n    } else {\n      cell.textContent = newValue;\n    }\n  }\n\n  input.addEventListener('blur', function() {\n    saveChanges(clickedCell, input);\n  });\n\n  input.addEventListener('keypress', function(e) {\n    if (e.key === 'Enter') {\n      saveChanges(clickedCell, input);\n    }\n  });\n\n  clickedCell.appendChild(input);\n  input.focus();\n});\n\ndocument.querySelector('body').style.alignItems = 'flex-start';\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}